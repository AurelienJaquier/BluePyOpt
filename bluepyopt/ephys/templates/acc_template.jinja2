{# This is an s-expr inspired by arborio::parse_expression(expr) in test_s_expr.cpp:1099 #}
(arbor-component
  (meta-data (version "0.1-dev"))
{%- if banner %} {#  ...probably rejected by arbor #}
  (meta-data (produced-by "{{banner}}"))
{%- endif %}
(cable-cell
  (label-dict
  {%- for loc, parameters in section_params %} {# could also use channels.keys() #}
    (region-def "{{ loc }}" (tag {{ loop.index0 }}))
  {%- endfor %}
   (decor
  {%- for param_name, param in global_params.items() %}
    {%- if param.mech is defined %}  
    (default (density (mechanism "{{ param.mech }}" ("{{ param.name }}" {{ param.value }}))))
    {%- else %}
    (default ({{ param.name }} {{ param.value }}))
    {%- endif %}
  {%- endfor %}
  {%- for loc, parameters in section_params %}
  {%- for param in parameters %}
    {%- if param.mech is defined %}  
    (paint (region "{{ loc }}") (density (mechanism "{{ param.mech }}" ("{{ param.name }}" {{ param.value }}))))
    {%- else %}
    (paint (region "{{ loc }}") ({{ param.name }} {{ param.value }}))
    {%- endif %}
  {%- endfor %}
  {%- endfor %}
  {# TODO: range params #}
  {# morphology - TODO: feed separately as a SWC/ASC file #}
  (morphology 
  {%- if morphology %} 
    (file "{{morphology}}") 
  {%- else %}
    execerror("Template {{template_name}} requires morphology name to instantiate")
  {%- endif %})